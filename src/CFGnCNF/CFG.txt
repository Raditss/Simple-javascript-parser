EQUAL -> equal
ISEQ -> iseq
ISEQQ -> iseqq
NEQQ -> neqq
LB -> lb
RB -> rb
COLON -> colon
ADD -> add
SUBTR -> subtr
MUL -> mul
DIV -> div
POW -> pow
LE -> le
L -> l
MOD -> mod
GE -> ge
G -> g
NEQ -> neq
SUBTREQ -> subtreq
MULEQ -> muleq
SUMEQ -> sumeq
DIVEQ -> diveq
AND -> and
OR -> or
NOT -> not
IF -> if
THEN -> then
ELSE -> else
ELIF -> ELSE IF
WHILE -> while
FALSE -> false
TRUE -> true
BREAK -> break
AS -> as
CLASS -> class
AVAR -> avar
ACONST -> aconst
ALET -> alet
CONTINUE -> continue
FUNC -> func
FOR -> for
FROM -> from
IMPORT -> import
IN -> in
RETURN -> return
WITH -> with
COMMA -> comma
DOTBETWEEN -> dotbetween
DOT -> dot
LSB -> lsb
RSB -> rsb
LCB -> lcb
RCB -> rcb
INT -> int
INT -> INT IN VAR
INT -> INT IN LIST
INT -> INT IN DICT
VAR -> var
VAR -> VAR DOT VAR
NEWLINE -> newline
TYPE -> type

S -> ENTER S
S -> S ENTER
S -> ENTER
S -> IMPORT_STMT
S -> IMPORT_STMT ENTER S
S -> IMPORT_STMT ENTER SS
S -> SS
SS -> PART SS

PART -> CLASS_STMT
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> TRY_STMT

SS -> CLASS_STMT
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> TRY_STMT
SS -> SENTENCE


SENTENCE -> FUNCTION
SENTENCE -> FUNC_STMT
SENTENCE -> ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> WITH_STATE
SENTENCE -> IF_BLOCK
SENTENCE -> FOR_STMT
SENTENCE -> STATIC
SENTENCE -> RETURN
SENTENCE -> CONTINUE
SENTENCE -> BREAK
SENTENCE -> RAISE
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> TRY_STMT
SENTENCE -> SCOLON
SENTENCE -> SENTENCE SCOLON
SENTENCE -> SWITCH_STMT
SENTENCE -> AALET
SENTENCE -> AAVAR
SENTENCE -> AACONST
SENTENCE -> WHILE_STMT

VARINT -> ENTER VARINT
STATIC -> ENTER STATIC

AALET -> ALET VAR EQUAL VARINT
AAVAR -> AVAR VAR EQUAL VARINT
AACONST -> ACONST VAR EQUAL VARINT
AALET -> ALET VAR EQUAL STATIC
AAVAR -> AVAR VAR EQUAL STATIC
AACONST -> ACONST VAR EQUAL STATIC

AALET -> ALET VAR ENTER EQUAL VARINT
AAVAR -> AVAR VAR ENTER EQUAL VARINT
AACONST -> ACONST ENTER VAR EQUAL VARINT
AALET -> ALET VAR ENTER EQUAL STATIC
AAVAR -> AVAR VAR ENTER EQUAL STATIC
AACONST -> ACONST ENTER VAR EQUAL STATIC

AALET -> ALET ENTER VAR EQUAL VARINT
AAVAR -> AVAR ENTER VAR EQUAL VARINT
AACONST -> ACONST ENTER VAR EQUAL VARINT
AALET -> ALET ENTER VAR EQUAL STATIC
AAVAR -> AVAR ENTER VAR EQUAL STATIC
AACONST -> ACONST ENTER VAR EQUAL STATIC

AALET -> ALET ENTER VAR ENTER EQUAL VARINT
AAVAR -> AVAR ENTER VAR ENTER EQUAL VARINT
AACONST -> ACONST ENTER VAR ENTER EQUAL VARINT
AALET -> ALET ENTER VAR ENTER EQUAL STATIC
AAVAR -> AVAR ENTER VAR ENTER EQUAL STATIC
AACONST -> ACONST ENTER VAR ENTER EQUAL STATIC

CONST_STMT -> CONST_STMT CONST_STMT
CONST_STMT -> ENTER
CONST_STMT -> STATIC COLON STATIC
CONST_STMT -> STATIC
CONST_STMT -> CONST_STMT COMMA STATIC COLON STATIC
CONST_STMT -> CONST_STMT COMMA STATIC

AACONST -> ACONST VAR EQUAL STATIC
AACONST -> ACONST VAR EQUAL LCB RCB
AACONST -> ACONST VAR EQUAL ENTER LCB CONST_STMT RCB
AACONST -> ACONST VAR EQUAL LCB CONST_STMT RCB

AACONST -> ACONST VAR ENTER EQUAL STATIC
AACONST -> ACONST VAR ENTER EQUAL LCB RCB
AACONST -> ACONST VAR ENTER EQUAL ENTER LCB CONST_STMT RCB
AACONST -> ACONST VAR ENTER EQUAL LCB CONST_STMT RCB


AACONST -> ACONST ENTER VAR EQUAL STATIC
AACONST -> ACONST ENTER VAR EQUAL LCB RCB
AACONST -> ACONST ENTER VAR EQUAL ENTER LCB CONST_STMT RCB
AACONST -> ACONST ENTER VAR EQUAL LCB CONST_STMT RCB

AACONST -> ACONST ENTER VAR ENTER EQUAL STATIC
AACONST -> ACONST ENTER VAR ENTER EQUAL LCB RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL ENTER LCB CONST_STMT RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL LCB CONST_STMT RCB

AACONST -> ACONST VAR EQUAL ENTER LCB CONST_STMT COMMA RCB
AACONST -> ACONST VAR EQUAL LCB CONST_STMT COMMA RCB
AACONST -> ACONST VAR ENTER EQUAL ENTER LCB CONST_STMT COMMA RCB
AACONST -> ACONST VAR ENTER EQUAL LCB CONST_STMT COMMA RCB
AACONST -> ACONST ENTER VAR EQUAL ENTER LCB CONST_STMT COMMA RCB
AACONST -> ACONST ENTER VAR EQUAL LCB CONST_STMT COMMA RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL ENTER LCB CONST_STMT COMMA RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL LCB CONST_STMT COMMA RCB

AACONST -> ACONST VAR EQUAL ENTER LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST VAR EQUAL LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST VAR ENTER EQUAL ENTER LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST VAR ENTER EQUAL LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST ENTER VAR EQUAL ENTER LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST ENTER VAR EQUAL LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL ENTER LCB CONST_STMT COMMA ENTER RCB
AACONST -> ACONST ENTER VAR ENTER EQUAL LCB CONST_STMT COMMA ENTER RCB


CURLY -> LCB RCB
CURLY -> CURLY SENTENCE
CURLY -> LCB CURLY RCB
CURLY -> LCB ENTER RCB
CURLY -> LCB ENTER SENTENCE RCB
CURLY -> LCB SENTENCE ENTER RCB
CURLY -> LCB RCB CURLY
CURLY -> LCB ENTER RCB
CURLY -> LCB SENTENCE RCB
CURLY -> LCB SENTENCE CURLY RCB
CURLY -> LCB CURLY SENTENCE RCB

STRING -> string
STRING -> STRING IN STRING
STRING -> STRING IN VAR
STRING -> STRING IN LIST
STRING -> STRING IN DICT
STRING -> MULTILINE
STRING -> MULTILINE ENTER
STRING -> ENTER MULTILINE

MULTILINE -> multiline
MULTILINE -> MULTILINE MULTILINE


DICT -> LCB RCB
DICT -> LCB PARAMDICT RCB
PARAMDICT -> PARAMDICT COMMA PARAMDICT
PARAMDICT -> STATIC COLON STATIC
LIST -> LSB RSB
LIST -> LSB PARAM RSB
LIST -> LSB VAR FOR PARAM IN VAR RSB
LIST -> LSB VAR FOR PARAM IN RANGE_STMT RSB
LIST -> LSB ARIT_OP FOR PARAM IN VAR RSB 
LIST -> LSB ARIT_OP FOR PARAM IN RANGE_STMT RSB
ARIT_OP -> VAR ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> VAR ARIT_OPERATOR VAR
ARIT_OP -> STATIC ARIT_OPERATOR VAR
ARIT_OP -> VAR ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> LB ARIT_OP RB
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUBTR
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> POW
ARIT_OPERATOR -> MOD
LOGI_VAR -> FUNCTION
LOGI_VAR -> METHOD_STMT
LOGI_VAR -> VARINT
LOGI_VAR -> NOT VARINT
LOGI_VAR -> BOOL
LOGI_VAR -> NOT LOGI_VAR
LOGI_VAR -> LB LOGI_VAR RB 
LOGI_VAR -> DICT 
LOGI_VAR -> LIST 
BOOL -> NOT BOOL
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_VAR LOGI_OPERATOR LOGI_VAR
LOGI_OP -> LB LOGI_OP RB
LOGI_OP -> ENTER LOGI_OP
LOGI_OP -> LOGI_OP ENTER

LOGI_OP -> ASSIGN LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_OP LOGI_OPERATOR ASSIGN
LOGI_OP -> ASSIGN LOGI_OPERATOR ASSIGN

LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> ISEQQ
LOGI_OPERATOR -> NEQQ
LOGI_OPERATOR -> LE
LOGI_OPERATOR -> L
LOGI_OPERATOR -> GE
LOGI_OPERATOR -> G
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
WITH_STATE -> WITH VAR LB PARAMFUNGSI RB AS VAR COLON ENTER SENTENCE 
PARAM -> ALL
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
VAR_FUNC -> VAR
VAR_FUNC -> STRING
VAR_FUNC -> VAR COLON TYPE
PARAMFUNGSI -> VAR_FUNC EQUAL STATIC
PARAMFUNGSI -> VAR_FUNC
PARAMFUNGSI -> VAR_FUNC COMMA PARAMFUNGSI
PARAMFUNGSI -> VAR_FUNC EQUAL STATIC COMMA PARAMFUNGSI
STATIC -> INT
STATIC -> STRING
STATIC -> BOOL
STATIC -> LIST
STATIC -> NONE
STATIC -> DICT
STATIC -> LB INT RB
STATIC -> LB STRING RB
STATIC -> LB BOOL RB
STATIC -> LB LIST RB
STATIC -> LOGI_OP
STATIC -> VAR

METHOD_STMT -> VAR LSB VARINT RSB DOT VAR
METHOD_STMT -> VAR LSB VARINT RSB DOT FUNCTION
METHOD_STMT -> DOTBETWEEN LB RB
METHOD_STMT -> DOTBETWEEN LB PARAM RB
METHOD_STMT -> DOTBETWEEN LB PARAMFUNGSI RB


SINGLE_SENTENCE -> FUNCTION
SINGLE_SENTENCE -> FUNC_STMT
SINGLE_SENTENCE -> ASSIGN
SINGLE_SENTENCE -> METHOD_STMT
SINGLE_SENTENCE -> WITH_STATE
SINGLE_SENTENCE -> IF_BLOCK
SINGLE_SENTENCE -> FOR_STMT
SINGLE_SENTENCE -> STATIC
SINGLE_SENTENCE -> RETURN
SINGLE_SENTENCE -> CONTINUE
SINGLE_SENTENCE -> BREAK
SINGLE_SENTENCE -> RAISE
SINGLE_SENTENCE -> ENTER SINGLE_SENTENCE
SINGLE_SENTENCE -> SINGLE_SENTENCE ENTER
SINGLE_SENTENCE -> SCOLON
SINGLE_SENTENCE -> SINGLE_SENTENCE SCOLON
SINGLE_SENTENCE -> SWITCH_STMT
SINGLE_SENTENCE -> AVAR VAR EQUAL VAR
SINGLE_SENTENCE -> ACONST VAR EQUAL VAR
SINGLE_SENTENCE -> ALET VAR EQUAL VAR
SINGLE_SENTENCE -> AVAR VAR EQUAL INT
SINGLE_SENTENCE -> ACONST VAR EQUAL INT
SINGLE_SENTENCE -> ALET VAR EQUAL INT
SINGLE_SENTENCE -> AVAR VAR EQUAL BOOL
SINGLE_SENTENCE -> ACONST VAR EQUAL BOOL
SINGLE_SENTENCE -> ALET VAR EQUAL BOOL

SINGLE_SENTENCE -> WHILE_STMT

IF_STMT -> IF LB VAR RB LCB SENTENCE RCB
IF_STMT -> IF LB FUNCTION RB LCB SENTENCE RCB
IF_STMT -> IF LB STATIC RB LCB SENTENCE RCB
IF_STMT -> IF LB STATIC RB LCB ENTER RCB
IF_STMT -> IF LB ALL RB LCB SENTENCE RCB
IF_STMT -> IF LB METHOD_STMT RB LCB SENTENCE RCB
IF_STMT -> IF LB LOGI_OP RB LCB SENTENCE RCB
IF_STMT -> IF LB VAR IN VAR RB LCB SENTENCE RCB

IF_STMT -> IF LB VAR RB SINGLE_SENTENCE
IF_STMT -> IF LB FUNCTION RB SINGLE_SENTENCE
IF_STMT -> IF LB STATIC RB SINGLE_SENTENCE
IF_STMT -> IF LB ALL RB SINGLE_SENTENCE
IF_STMT -> IF LB METHOD_STMT RB SINGLE_SENTENCE
IF_STMT -> IF LB LOGI_OP RB SINGLE_SENTENCE
IF_STMT -> IF LB VAR IN VAR RB SINGLE_SENTENCE

IF_STMT -> IF LB VAR RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB FUNCTION RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB STATIC RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB STATIC RB ENTER LCB ENTER RCB
IF_STMT -> IF LB ALL RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB METHOD_STMT RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB LOGI_OP RB ENTER LCB SENTENCE RCB
IF_STMT -> IF LB VAR IN VAR RB ENTER LCB SENTENCE RCB

IF_STMT -> IF LB VAR RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB FUNCTION RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB STATIC RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB ALL RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB METHOD_STMT RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB LOGI_OP RB ENTER SINGLE_SENTENCE
IF_STMT -> IF LB VAR IN VAR RB SINGLE_SENTENCE

ELIF_STMT -> ELIF LB VAR RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB FUNCTION RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB STATIC RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB STATIC RB LCB ENTER RCB
ELIF_STMT -> ELIF LB ALL RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB METHOD_STMT RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB LOGI_OP RB LCB SENTENCE RCB
ELIF_STMT -> ELIF LB VAR IN VAR RB LCB SENTENCE RCB

ELIF_STMT -> ELIF LB VAR RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB FUNCTION RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB STATIC RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB ALL RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB METHOD_STMT RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB LOGI_OP RB SINGLE_SENTENCE
ELIF_STMT -> ELIF LB VAR IN VAR RB SINGLE_SENTENCE

ELIF_STMT -> ELIF LB VAR RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB FUNCTION RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB STATIC RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB STATIC RB ENTER LCB ENTER RCB
ELIF_STMT -> ELIF LB ALL RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB METHOD_STMT RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB LOGI_OP RB ENTER LCB SENTENCE RCB
ELIF_STMT -> ELIF LB VAR IN VAR RB ENTER LCB SENTENCE RCB

ELIF_STMT -> ELIF LB VAR RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB FUNCTION RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB STATIC RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB ALL RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB METHOD_STMT RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB LOGI_OP RB ENTER SINGLE_SENTENCE
ELIF_STMT -> ELIF LB VAR IN VAR RB ENTER SINGLE_SENTENCE

ELSE_STMT -> ELSE LCB ENTER SENTENCE RCB
ELSE_STMT -> ELSE LCB SENTENCE RCB
ELSE_STMT -> ELSE LCB ENTER RCB
ELSE_STMT -> ELSE LCB RCB
ELSE_STMT -> ELSE SENTENCE
ELSE_STMT -> ELSE ENTER LCB SENTENCE RCB
ELSE_STMT -> ELSE ENTER LCB ENTER RCB
ELSE_STMT -> ELSE ENTER LCB RCB

ELIF_BANYAK -> ELIF_STMT
ELIF_BANYAK -> ELIF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT 
IF_BLOCK -> IF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT ENTER ELIF_BANYAK
IF_BLOCK -> IF_STMT ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ELIF_BANYAK ENTER ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELIF_BANYAK ENTER ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
IF_BLOCK -> IF_STMT ENTER ELSE_STMT
ARRAY -> VAR LIST
ASSIGN -> PARAM ASSIGN_OP ASSIGNMENT
ASSIGN -> VARINT ASSIGN_OP ASSIGNMENT
ASSIGN -> DOTBETWEEN ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN -> ASSIGNMENT
ASSIGN -> INCREMENT
ASSIGN -> DECREMENT

INCREMENT -> VAR ADD ADD
DECREMENT -> VAR SUBTR SUBTR

ASSIGN_OP -> EQUAL
ASSIGN_OP -> SUBTREQ
ASSIGN_OP -> MULEQ
ASSIGN_OP -> SUMEQ
ASSIGN_OP -> DIVEQ
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
OPERATION -> OPERATION ENTER
ASSIGNMENT -> DOTBETWEEN
ASSIGNMENT -> OPERATION
ASSIGNMENT -> VAR
ASSIGNMENT -> INT
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
ASSIGNMENT -> DICT
ASSIGNMENT -> ASSIGN_STMT

FUNC_STMT -> FUNC VAR LB RB LCB RCB
FUNC_STMT -> FUNC VAR LB RB LCB ENTER RCB
FUNC_STMT -> FUNC VAR LB RB LCB FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB RB LCB ENTER FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB LCB RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB LCB ENTER RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB LCB FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB LCB ENTER FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB RB ENTER LCB RCB
FUNC_STMT -> FUNC VAR LB RB ENTER LCB ENTER RCB
FUNC_STMT -> FUNC VAR LB RB ENTER LCB FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB RB ENTER LCB ENTER FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB ENTER LCB RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB ENTER LCB ENTER RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB ENTER LCB FUNC_SENTENCE RCB
FUNC_STMT -> FUNC VAR LB PARAMFUNGSI RB ENTER LCB ENTER FUNC_SENTENCE RCB
FUNC_SENTENCE -> WHILE_STMT_FUNC
FUNC_STMT -> VAR LB RB
FUNC_STMT -> VAR LB FUNC_STMT RB
FUNC_STMT -> TYPE LB RB
FUNC_STMT -> TYPE LB FUNC_STMT RB

ASSIGN_STMT -> VAR LB RB
ASSIGN_STMT -> VAR LB ASSIGN_STMT RB
ASSIGN_STMT -> TYPE LB RB
ASSIGN_STMT -> TYPE LB ASSIGN_STMT RB
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> IF_BLOCK_FUNC
FUNC_SENTENCE -> RETURN STATIC
FUNC_SENTENCE -> FUNC_SENTENCE RETURN STATIC
FUNC_SENTENCE -> RETURN STATIC FUNC_SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE FUNC_SENTENCE
FUNC_SENTENCE -> ENTER

IF_STMT_FUNC -> IF LB FUNCTION RB LCB RETURN STATIC RCB
IF_STMT_FUNC -> IF LB FUNCTION RB LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB METHOD_STMT RB LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB LOGI_OP RB LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB VAR IN VAR RB LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB STATIC RB LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB METHOD_STMT RB LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB LOGI_OP RB LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB VAR IN VAR RB LCB ENTER FUNC_SENTENCE RCB

ELIF_STMT_FUNC -> ELIF LB FUNCTION RB LCB RETURN STATIC RCB
ELIF_STMT_FUNC -> ELIF LB FUNCTION RB LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB METHOD_STMT RB LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB LOGI_OP RB LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB VAR IN VAR RB LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB STATIC RB LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB METHOD_STMT RB LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB LOGI_OP RB LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB VAR IN VAR RB LCB ENTER FUNC_SENTENCE RCB
ELSE_STMT_FUNC -> ELSE LCB FUNC_SENTENCE RCB
ELSE_STMT_FUNC -> ELSE ENTER LCB FUNC_SENTENCE RCB

IF_STMT_FUNC -> IF LB FUNCTION RB ENTER LCB RETURN STATIC RCB
IF_STMT_FUNC -> IF LB FUNCTION RB ENTER LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB METHOD_STMT RB ENTER LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB LOGI_OP RB ENTER LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB VAR IN VAR RB ENTER LCB FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB STATIC RB ENTER LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB METHOD_STMT RB ENTER LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB LOGI_OP RB ENTER LCB ENTER FUNC_SENTENCE RCB
IF_STMT_FUNC -> IF LB VAR IN VAR RB ENTER LCB ENTER FUNC_SENTENCE RCB

ELIF_STMT_FUNC -> ELIF LB FUNCTION RB ENTER LCB RETURN STATIC RCB
ELIF_STMT_FUNC -> ELIF LB FUNCTION RB ENTER LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB METHOD_STMT RB ENTER LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB LOGI_OP RB ENTER LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB VAR IN VAR RB ENTER LCB FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB STATIC RB ENTER LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB METHOD_STMT RB ENTER LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB LOGI_OP RB ENTER LCB ENTER FUNC_SENTENCE RCB
ELIF_STMT_FUNC -> ELIF LB VAR IN VAR RB ENTER LCB ENTER FUNC_SENTENCE RCB

ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC
ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC 
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC ELSE_STMT_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELSE_STMT_FUNC
FUNCTION -> VAR LB RB
FUNCTION -> VAR LB PARAM RB
FUNCTION -> VAR LB PARAMFUNGSI RB
CLASS_STMT -> CLASS VAR COLON ENTER CLASS_SENTENCE
CLASS_SENTENCE -> SENTENCE
CLASS_SENTENCE -> FUNC_STMT


WHILE_STMT -> WHILE LB LOGI_OP RB LCB LOOP_SENTENCE RCB
WHILE_STMT -> WHILE LB VARINT RB LCB LOOP_SENTENCE RCB

WHILE_STMT -> WHILE LB LOGI_OP RB LCB RCB
WHILE_STMT -> WHILE LB VARINT RB LCB RCB

WHILE_STMT -> WHILE LB LOGI_OP RB LCB ENTER RCB
WHILE_STMT -> WHILE LB VARINT RB LCB ENTER RCB

WHILE_STMT -> WHILE LB LOGI_OP RB ENTER LOOP_SENTENCE
WHILE_STMT -> WHILE LB VARINT ENTER RB LOOP_SENTENCE

WHILE_STMT -> WHILE LB LOGI_OP RB LOOP_SENTENCE
WHILE_STMT -> WHILE LB VARINT RB LOOP_SENTENCE

WHILE_STMT -> WHILE LB LOGI_OP RB ENTER LCB LOOP_SENTENCE RCB
WHILE_STMT -> WHILE LB VARINT RB ENTER LCB LOOP_SENTENCE RCB

WHILE_STMT -> WHILE LB LOGI_OP RB ENTER LCB ENTER RCB
WHILE_STMT -> WHILE LB VARINT RB ENTER LCB ENTER RCB

DO -> do
WHILE_STMT -> DO LCB LOOP_SENTENCE RCB WHILE LB LOGI_OP RB

WHILE_STMT -> DO ENTER LCB LOOP_SENTENCE RCB WHILE LB LOGI_OP RB
WHILE_STMT -> DO LCB LOOP_SENTENCE RCB ENTER WHILE LB LOGI_OP RB
WHILE_STMT -> DO LCB LOOP_SENTENCE RCB WHILE ENTER LB LOGI_OP RB

WHILE_STMT -> DO ENTER LCB LOOP_SENTENCE RCB ENTER WHILE LB LOGI_OP RB
WHILE_STMT -> DO ENTER LCB LOOP_SENTENCE RCB WHILE ENTER LB LOGI_OP RB
WHILE_STMT -> DO ENTER LCB LOOP_SENTENCE RCB ENTER WHILE ENTER LB LOGI_OP RB
WHILE_STMT -> DO LCB LOOP_SENTENCE RCB ENTER WHILE ENTER LB LOGI_OP RB

WHILE_STMT_FUNC -> WHILE_STMT
LOOP_SENTENCE_FUNC -> FUNC_SENTENCE
LOOP_SENTENCE_FUNC -> LOOP_SENTENCE
LOOP_SENTENCE_FUNC -> SENTENCE
LOOP_SENTENCE_FUNC -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE_FUNC -> BREAK
LOOP_SENTENCE_FUNC -> CONTINUE
LOOP_SENTENCE_FUNC -> RETURN
LOOP_SENTENCE_FUNC -> RETURN STATIC
LOOP_SENTENCE_FUNC -> RETURN STATIC ENTER

WHILE_STMT_FUNC -> WHILE LB LOGI_OP RB LCB LOOP_SENTENCE_FUNC RCB
WHILE_STMT_FUNC -> WHILE LB VARINT RB LCB LOOP_SENTENCE_FUNC RCB
WHILE_STMT_FUNC -> WHILE LB LOGI_OP RB ENTER SINGLE_LOOP_SENTENCE_FUNC
WHILE_STMT_FUNC -> WHILE LB VARINT RB ENTER SINGLE_LOOP_SENTENCE_FUNC
WHILE_STMT_FUNC -> WHILE LB LOGI_OP RB SINGLE_LOOP_SENTENCE_FUNC
WHILE_STMT_FUNC -> WHILE LB VARINT RB SINGLE_LOOP_SENTENCE_FUNC
WHILE_STMT_FUNC -> WHILE LB LOGI_OP RB ENTER LCB LOOP_SENTENCE_FUNC RCB
WHILE_STMT_FUNC -> WHILE LB VARINT RB ENTER LCB LOOP_SENTENCE_FUNC RCB

FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB LCB LOOP_SENTENCE RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB LCB LOOP_SENTENCE RCB
FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB LOOP_SENTENCE RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB LOOP_SENTENCE RCB

FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB SINGLE_LOOP_SENTENCE
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB SINGLE_LOOP_SENTENCE
FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB ENTER SINGLE_LOOP_SENTENCE
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB ENTER SINGLE_LOOP_SENTENCE

FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB LCB RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB LCB RCB
FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB LCB ENTER RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB LCB ENTER RCB
FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB RCB
FOR_STMT -> FOR LB AALET SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB ENTER RCB
FOR_STMT -> FOR LB AAVAR SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB ENTER RCB

FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB LCB LOOP_SENTENCE RCB
FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB LOOP_SENTENCE RCB

FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB SINGLE_LOOP_SENTENCE
FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB ENTER SINGLE_LOOP_SENTENCE

FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB LCB RCB
FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB LCB ENTER RCB
FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB RCB
FOR_STMT -> FOR LB ASSIGN SCOLON LOGI_OP SCOLON ASSIGN RB ENTER LCB ENTER RCB


SINGLE_LOOP_SENTENCE -> SINGLE_SENTENCE
SINGLE_LOOP_SENTENCE -> BREAK
SINGLE_LOOP_SENTENCE -> CONTINUE
SINGLE_LOOP_SENTENCE_FUNC -> SINGLE_LOOP_SENTENCE
SINGLE_LOOP_SENTENCE_FUNC -> RETURN STATIC

LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE

IMPORT_STMT -> IMPORT VAR AS VAR
IMPORT_STMT -> FROM VAR IMPORT VAR
IMPORT_STMT -> IMPORT VAR
RANGE_STMT -> RANGE LB VARINT RB
RANGE_STMT -> RANGE LB VARINT COMMA VARINT RB
RANGE_STMT -> RANGE LB VARINT COLON VARINT COLON VARINT RB
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
VAR -> LB VAR RB
VAR -> VAR COMMA VAR
VARINT -> VAR
VARINT -> INT
VARINT -> BOOL
ALL -> VARINT
ALL -> BOOL
ALL -> STRING
BOOL -> TRUE
BOOL -> FALSE
BOOL -> IS

TRY -> try
CATCH -> catch
THROW -> throw
FINALLY -> finally
SCOLON -> scolon

SOLOVAR -> var

SENTENCE_W_ENTER -> SENTENCE
SENTENCE_W_ENTER -> ENTER
SENTENCE_W_ENTER -> SENTENCE_W_ENTER SENTENCE_W_ENTER

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LCB RCB

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB RCB

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB SENTENCE_W_ENTER RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LCB SENTENCE_W_ENTER RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LCB RCB FINALLY LCB RCB

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB RCB FINALLY LCB RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB RCB FINALLY LCB RCB

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB SENTENCE_W_ENTER RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LCB SENTENCE_W_ENTER RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LCB RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LCB RCB FINALLY LCB SENTENCE_W_ENTER RCB

TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB SENTENCE_W_ENTER RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB SENTENCE_W_ENTER RCB CATCH LB SOLOVAR RB LCB RCB FINALLY LCB SENTENCE_W_ENTER RCB
TRY_STMT -> TRY LCB RCB CATCH LB SOLOVAR RB LCB RCB FINALLY LCB SENTENCE_W_ENTER RCB


SWITCH -> switch
CASE -> case
DEFAULT -> default

DEFAULT_STMT -> DEFAULT COLON SENTENCE_W_ENTER

CASE_STMT -> CASE VAR COLON SENTENCE_W_ENTER
CASE_STMT -> CASE INT COLON SENTENCE_W_ENTER
CASE_STMT -> CASE_STMT CASE_STMT
CASE_STMT -> CASE VAR COLON
CASE_STMT -> CASE INT COLON

MULTI_CASE -> CASE_STMT DEFAULT_STMT CASE_STMT
MULTI_CASE -> DEFAULT_STMT CASE_STMT
MULTI_CASE -> CASE_STMT DEFAULT_STMT
MULTI_CASE -> CASE_STMT
MULTI_CASE -> DEFAULT_STMT

SWITCH_STMT -> SWITCH LB VAR RB LCB MULTI_CASE RCB
SWITCH_STMT -> SWITCH LB VAR RB ENTER LCB MULTI_CASE RCB
SWITCH_STMT -> SWITCH LB VAR RB LCB ENTER MULTI_CASE RCB
SWITCH_STMT -> SWITCH LB VAR RB LCB MULTI_CASE ENTER RCB
SWITCH_STMT -> SWITCH LB VAR RB ENTER LCB ENTER MULTI_CASE RCB
SWITCH_STMT -> SWITCH LB VAR RB ENTER LCB MULTI_CASE ENTER RCB
SWITCH_STMT -> SWITCH LB VAR RB LCB ENTER MULTI_CASE ENTER RCB
SWITCH_STMT -> SWITCH LB VAR RB LCB ENTER RCB
SWITCH_STMT -> SWITCH LB VAR RB LCB RCB